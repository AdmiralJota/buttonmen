<?php

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2012-12-21 at 15:13:07.
 */
class XCYIteratorTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var XCYIterator
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers XCYIterator::setPosition
     * @todo   Implement testSetPosition().
     */
    public function testSetPosition()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers XCYIterator::rewind
     * @todo   Implement testRewind().
     */
    public function testRewind()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers XCYIterator::current
     * @todo   Implement testCurrent().
     */
    public function testCurrent()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers XCYIterator::key
     * @todo   Implement testKey().
     */
    public function testKey()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers XCYIterator::next
     * @todo   Implement testNext().
     */
    public function testNext()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers XCYIterator::valid
     * @todo   Implement testValid().
     */
    public function testValid()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }


    public function testXCYIterator() {

        // Test for the right number of results
        //
        // Number of ways to choose Y items from a set of X items is
        // X! / ( Y! * (X-Y)! )
        $it1 = new XCYIterator(array('A', 'B', 'C', 'D', 'E'), 1);
        $count = 0;

        foreach ($it1 as $key => $item) {
            $count++;
        }
        $this->assertEquals(5, $count);

        $it1 = new XCYIterator(array('A', 'B', 'C', 'D', 'E'), 2);
        $count = 0;

        foreach ($it1 as $key => $item) {
            $count++;
        }
        $this->assertEquals(10, $count);


        $it1 = new XCYIterator(array('A', 'B', 'C', 'D', 'E'), 3);
        $count = 0;

        foreach ($it1 as $key => $item) {
            $count++;
        }
        $this->assertEquals(10, $count);

        $it1 = new XCYIterator(array('A', 'B', 'C', 'D', 'E'), 4);
        $count = 0;

        foreach ($it1 as $key => $item) {
            $count++;
        }
        $this->assertEquals(5, $count);

        $it1 = new XCYIterator(array('A', 'B', 'C', 'D', 'E'), 5);
        $count = 0;

        foreach ($it1 as $key => $item) {
            $count++;
        }
        $this->assertEquals(1, $count);



        $it1 = new XCYIterator(array('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'), 4);
        $count = 0;

        foreach ($it1 as $key => $item) {
            $count++;
        }
        $this->assertEquals(70, $count);

        $it1 = new XCYIterator(array('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'), 5);
        $count = 0;

        foreach ($it1 as $key => $item) {
            $count++;
        }
        $this->assertEquals(56, $count);

    }
}