Configuration of the "vagrant" automated VM deployment tool to
create a runnable test instance of the buttonmen site.

------------------------------------------------------------------------
How to start an instance:

 1. (one-time) Install vagrant: download a recent version of vagrant from
      http://www.vagrantup.com/
    and install it.  (So far, this has been successfully tested
    using Vagrant 1.2.7 on Mac OS X 10.8.)

 2. (one-time) Install VirtualBox: download any recent version from
      http://www.virtualbox.org
    and install it.

 3. In your shell, cd into this directory in your checked out repo:
      cd .../deploy/vagrant

 4. Initialize the repo:
      vagrant up
    This will take some time, probably several minutes.  The file
    README.vagrant-up-example is an example of what you might see
    on your screen during a successful invocation.

    The very first time you run this, it will take longer, because
    it needs to download a copy of the Ubuntu VM which it will
    customize to make your test VM.

 4b. IF you are running vagrant on Windows, puppet may fail (see
     README.vagrant-up-windows-example for an example of what this
     may look like).  In that case, SSH into the new VM:

       vagrant ssh

     Once logged into the VM, run puppet by hand:

       sudo puppet apply --modulepath /tmp/vagrant-puppet/modules-0 /buttonmen/deploy/vagrant/manifests/init.pp

     This should produce output similar to the second part of
     README.vagrant-up-example

 5. Use the site: using a web browser, go to:

      http://localhost:8080/

    You should see an instance of the buttonmen site with a clean
    database.

------------------------------------------------------------------------
Things you might want to do after you have a running instance:

 * Tear down your instance entirely, e.g. to start over:

     vagrant destroy

 * Reboot the VM and resynchronize the buttonmen code from your
   working directory:

     vagrant reload

 * Shut down the VM so it can be booted again later:

     vagrant halt

 * Find out other options:

     vagrant help

 * Quickly update your vagrant instance's webserver with code changes
   you've made in your git working directory:

     vagrant ssh -c 'sudo /usr/bin/rsync -av --exclude=test-ui --delete /buttonmen/src/ /var/www/; sudo /usr/bin/rsync -av --delete /buttonmen/test/src/ui/ /var/www/test-ui/'

 * Login to your instance:

     vagrant ssh

 * Once logged in via SSH, run the test suites that run on pagodabox:

     cd /buttonmen/src
     php /usr/local/etc/buttonmen_phpunit.php /buttonmen/test

 * Once logged in via SSH, look at your buttonmen database via the MySQL CLI:

     mysql -u root -p buttonmen

 * Once logged in via SSH, look at the webserver error log to debug failures:

     cat /var/log/apache2/error.log
